name: Build PR Image
on:
  pull_request:
    types: [opened,synchronize,reopened,closed]
  push:

jobs:
  build-metabase:
    name: BM - GHA cache
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    if: ${{ github.event.action != 'closed' }}
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_WORKER=$(uuidgen)" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.uffizzi.com/${{ env.UUID_WORKER }}
          tags: |
            type=raw,value=60d

      - name: Build and Push Image to registry.uffizzi.com - Uffizzi's ephemeral Registry
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          #cache-to: type=gha,mode=max


  build-metabase-cached:
    name: BM - buildx local registry cache
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    if: ${{ github.event.action != 'closed' }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_WORKER=$(uuidgen)" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.uffizzi.com/${{ env.UUID_WORKER }}
          tags: |
            type=raw,value=60d
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Build and Push Image to registry.uffizzi.com - Uffizzi's ephemeral Registry
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
         # cache-to: type=local,dest=/tmp/.buildx-cache-new, mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-metabase-github-package:
    name: metabase - GHCR cache
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    if: ${{ github.event.action != 'closed' }}
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_WORKER=$(uuidgen)" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.uffizzi.com/${{ env.UUID_WORKER }}
          tags: |
            type=raw,value=60d

      - name: Build and Push Image to registry.uffizzi.com - Uffizzi's ephemeral Registry
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=registry,src=docker.pkg.github.com/$GITHUB_REPOSITORY/metabase-github-package
         # cache-to: type=registry,mode=max,src=docker.pkg.github.com/$GITHUB_REPOSITORY/metabase-github-package

  build-metabase-no-cache:
    name: BM - no cache
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    if: ${{ github.event.action != 'closed' }}
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_WORKER=$(uuidgen)" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.uffizzi.com/${{ env.UUID_WORKER }}
          tags: |
            type=raw,value=60d

      - name: Build and Push Image to registry.uffizzi.com - Uffizzi's ephemeral Registry
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

